version: 2
jobs:
    build:
        docker:
            - image: microsoft/aspnetcore-build:2.0
        environment:
            - BASE_VERSION: 1.0.0
            - ARTIFACT_NAME: Drewgle-exif-viewer
        steps:
            - checkout
            - run: apt-get update && apt-get install -y zip
            - run: dotnet restore -r linux-x64
            - run: |
                cd ./src/exif.viewer
                dotnet lambda package -o ../../published/zip/${ARTIFACT_NAME}.zip -c Release
            - run: mkdir -p ./published/terraform
            - run: mv ./terraform ./published
            - persist_to_workspace:
                root: published
                paths:
                    - zip/*
                    - terraform/*
            - store_artifacts:
                path: ./published/zip/
                destination: build
    plan:
        docker:
            - image: marcelocorreia/terraform:0.10.3
        environment:
            - ARTIFACT_NAME: Drewgle-exif-viewer
            - DEPLOY_STAGE_NAME: prod
        working_directory: ~/terraform
        steps:
            - attach_workspace:
                at: ~/terraform
            - run: | 
                cd terraform/
                export TF_VAR_artifactPath=~/terraform/zip/${ARTIFACT_NAME}.zip
                export TF_VAR_stageName=${DEPLOY_STAGE_NAME}
                terraform get 
                terraform init -input=false
                terraform plan -out=terraform.plan -input=false
            - persist_to_workspace:
                root: ./
                paths:
                    - terraform/
            - store_artifacts:
                path: ./terraform/terraform.plan
                destination: terraform.plan
    deploy:
        docker:
            - image: marcelocorreia/terraform:0.10.3
        environment:
            - ARTIFACT_NAME: Drewgle-exif-viewer
            - DEPLOY_STAGE_NAME: prod
        working_directory: ~/terraform
        steps:
            - attach_workspace:
                at: ~/terraform
            - run: |
                cd terraform/
                export TF_VAR_artifactPath=~/terraform/zip/${ARTIFACT_NAME}.zip
                export TF_VAR_stageName=${DEPLOY_STAGE_NAME}
                terraform init -input=false
                terraform apply -input=false terraform.plan
    destroy:
        docker:
            - image: marcelocorreia/terraform:0.10.3
        working_directory: ~/terraform
        steps:
            - attach_workspace:
                at: ~/terraform
            - run: |
                cd terraform/
                export TF_VAR_artifactPath=~/terraform/zip/Drewgle-exif-viewer.zip
                export TF_VAR_stageName=${DEPLOY_STAGE_NAME}
                terraform init -input=false
                terraform destroy -input=false -force ./

workflows:
    version: 2
    build_and_test:
        jobs:
            - build
            - plan:
                requires:
                    - build
            - deploy:
                requires:
                    - plan
                filters:
                    branches:
                        only: master
            - hold:
                type: approval
                requires:
                    - plan
                filters:
                    branches:
                        only: master
            - destroy:
                requires:
                    - hold